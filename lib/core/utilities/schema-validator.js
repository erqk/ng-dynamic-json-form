"use strict";export const NgDynamicJsonFormSchema = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"NgDynamicJsonFormSchema","type":"array","items":{"type":"object","properties":{"formControlName":{"type":"string"},"conditions":{"$ref":"#/definitions/conditionConfig"},"children":{"$ref":"#"},"description":{"type":"string"},"hidden":{"type":"boolean","description":"Don't render the UI of this control if set to true."},"label":{"type":"string"},"layout":{"$ref":"#/definitions/layoutConfig"},"placeholder":{"type":"string"},"readonly":{"type":"boolean"},"value":{},"validators":{"$ref":"#/definitions/validatorConfig"}},"required":["formControlName"]},"definitions":{"conditionIfConfig":{"type":"array","minItems":3,"maxItems":3,"items":[{"type":"string"},{"enum":["===","!==",">=",">","<=","<","includes","notIncludes"]},{}]},"conditionGroupConfig":{"type":"object","properties":{"&&":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/conditionIfConfig"},{"$ref":"#/definitions/conditionGroupConfig"}]}},"||":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/conditionIfConfig"},{"$ref":"#/definitions/conditionGroupConfig"}]}}},"additionalProperties":false},"conditionConfig":{"type":"object","patternProperties":{"^.+$":{"$ref":"#/definitions/conditionGroupConfig"}},"additionalProperties":false},"labelPositionConfig":{"enum":["after","before"],"default":"after"},"extra":{"type":"object"},"optionsSourceConfig":{"type":"object","properties":{"src":{"type":"string"},"method":{"enum":["GET","POST"]},"params":{"type":"object"},"paramsFromControls":{"type":"object"},"data":{"type":"object","properties":{"labelKey":{"type":"string"},"path":{"type":"string"},"valueKeys":{"type":"array","items":{"type":"string"}}},"required":["labelKey"]},"slice":{"type":"array","items":[{"type":"number"},{"type":"number"}],"minItems":2,"maxItems":2}},"required":["src","method","data"]},"optionsTriggerConfig":{"type":"object","oneOf":[{"$ref":"#/definitions/optionsSourceConfig"}],"properties":{"action":{"enum":["FILTER","REQUEST"]},"triggerValuePath":{"type":"string"},"filterMatchPath":{"type":"string"},"debounceTime":{"type":"number"}},"required":["action","triggerValuePath"]},"optionsItemConfig":{"type":"object","properties":{"label":{"type":"string"},"value":{}},"required":["label"]},"layoutConfig":{"type":"object","properties":{"hostClass":{"type":"string"},"hostStyles":{"type":"string"},"labelClass":{"type":"string"},"labelStyles":{"type":"string"},"contentClass":{"type":"string"},"contentStyles":{"type":"string"},"descriptionClass":{"type":"string"},"descriptionStyles":{"type":"string"},"errorClass":{"type":"string"},"errorStyles":{"type":"string"},"descriptionPosition":{"enum":["after","before"]},"hideErrorMessage":{"type":"boolean"},"hideLabel":{"type":"boolean"},"contentCollapsible":{"enum":["collapse","expand"],"description":"Enable expand/collapse of content. The default state will be determined by value provided"},"autoAddRequiredClass":{"type":"boolean","description":"Add `required` class automatically to control if there's validator named `required`. Default is true."}}},"validatorConfig":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"value":{},"message":{"type":"string"}},"required":["name"]}}}};const schema16 = {"type":"object","properties":{"hostClass":{"type":"string"},"hostStyles":{"type":"string"},"labelClass":{"type":"string"},"labelStyles":{"type":"string"},"contentClass":{"type":"string"},"contentStyles":{"type":"string"},"descriptionClass":{"type":"string"},"descriptionStyles":{"type":"string"},"errorClass":{"type":"string"},"errorStyles":{"type":"string"},"descriptionPosition":{"enum":["after","before"]},"hideErrorMessage":{"type":"boolean"},"hideLabel":{"type":"boolean"},"contentCollapsible":{"enum":["collapse","expand"],"description":"Enable expand/collapse of content. The default state will be determined by value provided"},"autoAddRequiredClass":{"type":"boolean","description":"Add `required` class automatically to control if there's validator named `required`. Default is true."}}};const schema17 = {"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"value":{},"message":{"type":"string"}},"required":["name"]}};const schema12 = {"type":"object","patternProperties":{"^.+$":{"$ref":"#/definitions/conditionGroupConfig"}},"additionalProperties":false};const pattern0 = new RegExp("^.+$", "u");const schema13 = {"type":"object","properties":{"&&":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/conditionIfConfig"},{"$ref":"#/definitions/conditionGroupConfig"}]}},"||":{"type":"array","items":{"anyOf":[{"$ref":"#/definitions/conditionIfConfig"},{"$ref":"#/definitions/conditionGroupConfig"}]}}},"additionalProperties":false};const schema14 = {"type":"array","minItems":3,"maxItems":3,"items":[{"type":"string"},{"enum":["===","!==",">=",">","<=","<","includes","notIncludes"]},{}]};const wrapper0 = {validate: validate12};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "&&") || (key0 === "||"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data["&&"] !== undefined){let data0 = data["&&"];const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;let valid2 = false;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data1)){if(data1.length > 3){const err0 = {instancePath:instancePath+"/&&/" + i0,schemaPath:"#/definitions/conditionIfConfig/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {if(data1.length < 3){const err1 = {instancePath:instancePath+"/&&/" + i0,schemaPath:"#/definitions/conditionIfConfig/minItems",keyword:"minItems",params:{limit: 3},message:"must NOT have fewer than 3 items"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}else {const len1 = data1.length;if(len1 > 0){const _errs9 = errors;if(typeof data1[0] !== "string"){const err2 = {instancePath:instancePath+"/&&/" + i0+"/0",schemaPath:"#/definitions/conditionIfConfig/items/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid4 = _errs9 === errors;}if(valid4){if(len1 > 1){let data3 = data1[1];const _errs11 = errors;if(!((((((((data3 === "===") || (data3 === "!==")) || (data3 === ">=")) || (data3 === ">")) || (data3 === "<=")) || (data3 === "<")) || (data3 === "includes")) || (data3 === "notIncludes"))){const err3 = {instancePath:instancePath+"/&&/" + i0+"/1",schemaPath:"#/definitions/conditionIfConfig/items/1/enum",keyword:"enum",params:{allowedValues: schema14.items[1].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var valid4 = _errs11 === errors;}}}}}else {const err4 = {instancePath:instancePath+"/&&/" + i0,schemaPath:"#/definitions/conditionIfConfig/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}var _valid0 = _errs6 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs12 = errors;if(!(wrapper0.validate(data1, {instancePath:instancePath+"/&&/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var _valid0 = _errs12 === errors;valid2 = valid2 || _valid0;}if(!valid2){const err5 = {instancePath:instancePath+"/&&/" + i0,schemaPath:"#/properties/%26%26/items/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;validate12.errors = vErrors;return false;}else {errors = _errs5;if(vErrors !== null){if(_errs5){vErrors.length = _errs5;}else {vErrors = null;}}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/&&",schemaPath:"#/properties/%26%26/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data["||"] !== undefined){let data4 = data["||"];const _errs13 = errors;if(errors === _errs13){if(Array.isArray(data4)){var valid5 = true;const len2 = data4.length;for(let i1=0; i1<len2; i1++){let data5 = data4[i1];const _errs15 = errors;const _errs16 = errors;let valid6 = false;const _errs17 = errors;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data5)){if(data5.length > 3){const err6 = {instancePath:instancePath+"/||/" + i1,schemaPath:"#/definitions/conditionIfConfig/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}else {if(data5.length < 3){const err7 = {instancePath:instancePath+"/||/" + i1,schemaPath:"#/definitions/conditionIfConfig/minItems",keyword:"minItems",params:{limit: 3},message:"must NOT have fewer than 3 items"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}else {const len3 = data5.length;if(len3 > 0){const _errs20 = errors;if(typeof data5[0] !== "string"){const err8 = {instancePath:instancePath+"/||/" + i1+"/0",schemaPath:"#/definitions/conditionIfConfig/items/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}var valid8 = _errs20 === errors;}if(valid8){if(len3 > 1){let data7 = data5[1];const _errs22 = errors;if(!((((((((data7 === "===") || (data7 === "!==")) || (data7 === ">=")) || (data7 === ">")) || (data7 === "<=")) || (data7 === "<")) || (data7 === "includes")) || (data7 === "notIncludes"))){const err9 = {instancePath:instancePath+"/||/" + i1+"/1",schemaPath:"#/definitions/conditionIfConfig/items/1/enum",keyword:"enum",params:{allowedValues: schema14.items[1].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}var valid8 = _errs22 === errors;}}}}}else {const err10 = {instancePath:instancePath+"/||/" + i1,schemaPath:"#/definitions/conditionIfConfig/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}var _valid1 = _errs17 === errors;valid6 = valid6 || _valid1;if(!valid6){const _errs23 = errors;if(!(wrapper0.validate(data5, {instancePath:instancePath+"/||/" + i1,parentData:data4,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var _valid1 = _errs23 === errors;valid6 = valid6 || _valid1;}if(!valid6){const err11 = {instancePath:instancePath+"/||/" + i1,schemaPath:"#/properties/%7C%7C/items/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;validate12.errors = vErrors;return false;}else {errors = _errs16;if(vErrors !== null){if(_errs16){vErrors.length = _errs16;}else {vErrors = null;}}}var valid5 = _errs15 === errors;if(!valid5){break;}}}else {validate12.errors = [{instancePath:instancePath+"/||",schemaPath:"#/properties/%7C%7C/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs13 === errors;}else {var valid0 = true;}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(pattern0.test(key0))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){var valid0 = true;for(const key1 in data){if(pattern0.test(key1)){const _errs2 = errors;if(!(validate12(data[key1], {instancePath:instancePath+"/" + key1.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key1,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;if(!valid0){break;}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="NgDynamicJsonFormSchema" */;let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;if(errors === _errs1){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if((data0.formControlName === undefined) && (missing0 = "formControlName")){validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/items/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data0.formControlName !== undefined){const _errs3 = errors;if(typeof data0.formControlName !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/formControlName",schemaPath:"#/items/properties/formControlName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data0.conditions !== undefined){const _errs5 = errors;if(!(validate11(data0.conditions, {instancePath:instancePath+"/" + i0+"/conditions",parentData:data0,parentDataProperty:"conditions",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data0.children !== undefined){const _errs6 = errors;if(!(validate10(data0.children, {instancePath:instancePath+"/" + i0+"/children",parentData:data0,parentDataProperty:"children",rootData}))){vErrors = vErrors === null ? validate10.errors : vErrors.concat(validate10.errors);errors = vErrors.length;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data0.description !== undefined){const _errs7 = errors;if(typeof data0.description !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/description",schemaPath:"#/items/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data0.hidden !== undefined){const _errs9 = errors;if(typeof data0.hidden !== "boolean"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/hidden",schemaPath:"#/items/properties/hidden/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid1 = _errs9 === errors;}else {var valid1 = true;}if(valid1){if(data0.label !== undefined){const _errs11 = errors;if(typeof data0.label !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/label",schemaPath:"#/items/properties/label/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs11 === errors;}else {var valid1 = true;}if(valid1){if(data0.layout !== undefined){let data7 = data0.layout;const _errs13 = errors;const _errs14 = errors;if(errors === _errs14){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){if(data7.hostClass !== undefined){const _errs16 = errors;if(typeof data7.hostClass !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/hostClass",schemaPath:"#/definitions/layoutConfig/properties/hostClass/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}if(valid3){if(data7.hostStyles !== undefined){const _errs18 = errors;if(typeof data7.hostStyles !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/hostStyles",schemaPath:"#/definitions/layoutConfig/properties/hostStyles/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs18 === errors;}else {var valid3 = true;}if(valid3){if(data7.labelClass !== undefined){const _errs20 = errors;if(typeof data7.labelClass !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/labelClass",schemaPath:"#/definitions/layoutConfig/properties/labelClass/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs20 === errors;}else {var valid3 = true;}if(valid3){if(data7.labelStyles !== undefined){const _errs22 = errors;if(typeof data7.labelStyles !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/labelStyles",schemaPath:"#/definitions/layoutConfig/properties/labelStyles/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs22 === errors;}else {var valid3 = true;}if(valid3){if(data7.contentClass !== undefined){const _errs24 = errors;if(typeof data7.contentClass !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/contentClass",schemaPath:"#/definitions/layoutConfig/properties/contentClass/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs24 === errors;}else {var valid3 = true;}if(valid3){if(data7.contentStyles !== undefined){const _errs26 = errors;if(typeof data7.contentStyles !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/contentStyles",schemaPath:"#/definitions/layoutConfig/properties/contentStyles/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs26 === errors;}else {var valid3 = true;}if(valid3){if(data7.descriptionClass !== undefined){const _errs28 = errors;if(typeof data7.descriptionClass !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/descriptionClass",schemaPath:"#/definitions/layoutConfig/properties/descriptionClass/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs28 === errors;}else {var valid3 = true;}if(valid3){if(data7.descriptionStyles !== undefined){const _errs30 = errors;if(typeof data7.descriptionStyles !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/descriptionStyles",schemaPath:"#/definitions/layoutConfig/properties/descriptionStyles/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs30 === errors;}else {var valid3 = true;}if(valid3){if(data7.errorClass !== undefined){const _errs32 = errors;if(typeof data7.errorClass !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/errorClass",schemaPath:"#/definitions/layoutConfig/properties/errorClass/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs32 === errors;}else {var valid3 = true;}if(valid3){if(data7.errorStyles !== undefined){const _errs34 = errors;if(typeof data7.errorStyles !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/errorStyles",schemaPath:"#/definitions/layoutConfig/properties/errorStyles/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs34 === errors;}else {var valid3 = true;}if(valid3){if(data7.descriptionPosition !== undefined){let data18 = data7.descriptionPosition;const _errs36 = errors;if(!((data18 === "after") || (data18 === "before"))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/descriptionPosition",schemaPath:"#/definitions/layoutConfig/properties/descriptionPosition/enum",keyword:"enum",params:{allowedValues: schema16.properties.descriptionPosition.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs36 === errors;}else {var valid3 = true;}if(valid3){if(data7.hideErrorMessage !== undefined){const _errs37 = errors;if(typeof data7.hideErrorMessage !== "boolean"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/hideErrorMessage",schemaPath:"#/definitions/layoutConfig/properties/hideErrorMessage/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid3 = _errs37 === errors;}else {var valid3 = true;}if(valid3){if(data7.hideLabel !== undefined){const _errs39 = errors;if(typeof data7.hideLabel !== "boolean"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/hideLabel",schemaPath:"#/definitions/layoutConfig/properties/hideLabel/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid3 = _errs39 === errors;}else {var valid3 = true;}if(valid3){if(data7.contentCollapsible !== undefined){let data21 = data7.contentCollapsible;const _errs41 = errors;if(!((data21 === "collapse") || (data21 === "expand"))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/contentCollapsible",schemaPath:"#/definitions/layoutConfig/properties/contentCollapsible/enum",keyword:"enum",params:{allowedValues: schema16.properties.contentCollapsible.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs41 === errors;}else {var valid3 = true;}if(valid3){if(data7.autoAddRequiredClass !== undefined){const _errs42 = errors;if(typeof data7.autoAddRequiredClass !== "boolean"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout/autoAddRequiredClass",schemaPath:"#/definitions/layoutConfig/properties/autoAddRequiredClass/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid3 = _errs42 === errors;}else {var valid3 = true;}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/layout",schemaPath:"#/definitions/layoutConfig/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs13 === errors;}else {var valid1 = true;}if(valid1){if(data0.placeholder !== undefined){const _errs44 = errors;if(typeof data0.placeholder !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/placeholder",schemaPath:"#/items/properties/placeholder/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs44 === errors;}else {var valid1 = true;}if(valid1){if(data0.readonly !== undefined){const _errs46 = errors;if(typeof data0.readonly !== "boolean"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/readonly",schemaPath:"#/items/properties/readonly/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid1 = _errs46 === errors;}else {var valid1 = true;}if(valid1){if(data0.validators !== undefined){let data25 = data0.validators;const _errs48 = errors;const _errs49 = errors;if(errors === _errs49){if(Array.isArray(data25)){var valid5 = true;const len1 = data25.length;for(let i1=0; i1<len1; i1++){let data26 = data25[i1];const _errs51 = errors;if(errors === _errs51){if(data26 && typeof data26 == "object" && !Array.isArray(data26)){let missing1;if((data26.name === undefined) && (missing1 = "name")){validate10.errors = [{instancePath:instancePath+"/" + i0+"/validators/" + i1,schemaPath:"#/definitions/validatorConfig/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data26.name !== undefined){const _errs53 = errors;if(typeof data26.name !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/validators/" + i1+"/name",schemaPath:"#/definitions/validatorConfig/items/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs53 === errors;}else {var valid6 = true;}if(valid6){if(data26.message !== undefined){const _errs55 = errors;if(typeof data26.message !== "string"){validate10.errors = [{instancePath:instancePath+"/" + i0+"/validators/" + i1+"/message",schemaPath:"#/definitions/validatorConfig/items/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs55 === errors;}else {var valid6 = true;}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/validators/" + i1,schemaPath:"#/definitions/validatorConfig/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs51 === errors;if(!valid5){break;}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/validators",schemaPath:"#/definitions/validatorConfig/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs48 === errors;}else {var valid1 = true;}}}}}}}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;}