# .github/workflows/deploy-docs.yml
name: Build and Commit Versioned Documentation

on:
  push:
    branches:
      - 'v[0-9]*'  # Matches v8, v9, v10, v11, etc.

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required to push to gh-pages branch
    
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js (adjust based on your build tool)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'  # Remove if you don't use npm
    
    # Customize these build steps based on your documentation setup
    - name: Install dependencies
      run: npm install  # Change to: yarn install, pip install -r requirements.txt, etc.
    
    - name: Build documentation
      run: npm run build:docs  # Change to your build command
    
    - name: Extract version from branch name
      id: extract_version
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        VERSION=${BRANCH_NAME#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "Building documentation for version: $VERSION"
    
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update version documentation
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        
        # Remove existing version directory if it exists
        rm -rf gh-pages/$VERSION
        
        # Create version directory
        mkdir -p gh-pages/$VERSION
        
        # Copy built documentation to version directory
        # Adjust 'dist' to match your build output directory
        cp -r dist/* gh-pages/$VERSION/
        
        echo "Documentation copied to version directory: $VERSION"
    
    - name: Create redirect index
      run: |
        cd gh-pages
        
        # Find the latest version (highest number)
        LATEST_VERSION=$(find . -maxdepth 1 -type d -name '[0-9]*' | sed 's|./||' | sort -V | tail -1)
        
        if [ -n "$LATEST_VERSION" ]; then
          echo "Creating redirect index for latest version: $LATEST_VERSION"
          
          # Create index.html with redirect
          cat > index.html <<'HTML_CONTENT'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Documentation - Redirecting...</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            text-align: center;
            padding: 50px 20px;
            color: #666;
            background: #f8f9fa;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background: white;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #0366d6;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        a {
            color: #0366d6;
            text-decoration: none;
            font-weight: 500;
        }
        a:hover {
            text-decoration: underline;
        }
        .version-badge {
            background: #e3f2fd;
            color: #1976d2;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 0.9em;
            display: inline-block;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="spinner"></div>
        <h2>Redirecting to Documentation</h2>
        <p>Taking you to the latest version...</p>
        <p>If you are not redirected automatically, <a href="/VERSION_PLACEHOLDER/">click here</a>.</p>
        <div class="version-badge">vVERSION_PLACEHOLDER</div>
    </div>
    <script>
        window.location.href = '/VERSION_PLACEHOLDER/';
    </script>
    <noscript>
        <meta http-equiv="refresh" content="0; url=/VERSION_PLACEHOLDER/">
    </noscript>
</body>
</html>
HTML_CONTENT
          
          # Replace placeholder with actual version
          sed -i "s/VERSION_PLACEHOLDER/$LATEST_VERSION/g" index.html
          
        else
          echo "No versions found, creating placeholder index"
          cat > index.html <<'HTML_CONTENT'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Documentation</title>
</head>
<body>
    <h1>ðŸ“š Documentation</h1>
    <p>No documentation versions available yet.</p>
</body>
</html>
HTML_CONTENT
        fi
    
    - name: Commit and push to gh-pages branch
      run: |
        cd gh-pages
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Add all changes
        git add .
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Deploy documentation for version ${{ steps.extract_version.outputs.version }}"
          git push origin gh-pages
          echo "Successfully pushed documentation to gh-pages branch"
        fi