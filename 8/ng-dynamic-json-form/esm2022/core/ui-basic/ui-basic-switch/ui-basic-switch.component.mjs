import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import { CustomControlComponent } from '../../components/custom-control/custom-control.component';
import { PropsBindingDirective } from '../../directives';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class UiBasicSwitchComponent extends CustomControlComponent {
    constructor() {
        super(...arguments);
        this.control = new FormControl(false);
    }
    registerOnChange(fn) {
        this._onChange = fn;
    }
    updateControl(e) {
        const checked = e.target.checked;
        this.control.setValue(checked);
        this._onChange(checked);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicSwitchComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UiBasicSwitchComponent, isStandalone: true, selector: "ui-basic-switch", host: { classAttribute: "ui-basic" }, usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"option-button-wrapper\"\n    [ngClass]=\"{\n      disabled: control.disabled\n    }\"\n  >\n    <label class=\"option-button switch-button\">\n      <ng-container\n        *ngIf=\"data.options?.labelPosition === 'before'\"\n        [ngTemplateOutlet]=\"labelTemplate\"\n      ></ng-container>\n\n      <input\n        type=\"checkbox\"\n        [propsBinding]=\"[\n          {\n            props: data.props,\n            omit: ['type']\n          }\n        ]\"\n        [checked]=\"control.value === true\"\n        (change)=\"updateControl($event)\"\n      />\n      <span class=\"marker\"></span>\n\n      <ng-container\n        *ngIf=\"data.options?.labelPosition !== 'before'\"\n        [ngTemplateOutlet]=\"labelTemplate\"\n      ></ng-container>\n    </label>\n  </div>\n\n  <ng-template #labelTemplate>\n    <span *ngIf=\"data.options?.data?.[0]?.label\">{{\n      data.options?.data?.[0]?.label\n    }}</span>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: PropsBindingDirective, selector: "[propsBinding]", inputs: ["propsBinding"] }] }); }
}
export { UiBasicSwitchComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicSwitchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-basic-switch', standalone: true, imports: [CommonModule, ReactiveFormsModule, PropsBindingDirective], host: {
                        class: 'ui-basic',
                    }, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"option-button-wrapper\"\n    [ngClass]=\"{\n      disabled: control.disabled\n    }\"\n  >\n    <label class=\"option-button switch-button\">\n      <ng-container\n        *ngIf=\"data.options?.labelPosition === 'before'\"\n        [ngTemplateOutlet]=\"labelTemplate\"\n      ></ng-container>\n\n      <input\n        type=\"checkbox\"\n        [propsBinding]=\"[\n          {\n            props: data.props,\n            omit: ['type']\n          }\n        ]\"\n        [checked]=\"control.value === true\"\n        (change)=\"updateControl($event)\"\n      />\n      <span class=\"marker\"></span>\n\n      <ng-container\n        *ngIf=\"data.options?.labelPosition !== 'before'\"\n        [ngTemplateOutlet]=\"labelTemplate\"\n      ></ng-container>\n    </label>\n  </div>\n\n  <ng-template #labelTemplate>\n    <span *ngIf=\"data.options?.data?.[0]?.label\">{{\n      data.options?.data?.[0]?.label\n    }}</span>\n  </ng-template>\n</ng-container>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktYmFzaWMtc3dpdGNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYi9jb3JlL3VpLWJhc2ljL3VpLWJhc2ljLXN3aXRjaC91aS1iYXNpYy1zd2l0Y2guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGliL2NvcmUvdWktYmFzaWMvdWktYmFzaWMtc3dpdGNoL3VpLWJhc2ljLXN3aXRjaC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDbEcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7OztBQUV6RCxNQVVhLHNCQUF1QixTQUFRLHNCQUFzQjtJQVZsRTs7UUFhVyxZQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7S0FZM0M7SUFWVSxnQkFBZ0IsQ0FBQyxFQUFPO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxhQUFhLENBQUMsQ0FBUTtRQUNwQixNQUFNLE9BQU8sR0FBSSxDQUFDLENBQUMsTUFBMkIsQ0FBQyxPQUFPLENBQUM7UUFFdkQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQixDQUFDOytHQWRVLHNCQUFzQjttR0FBdEIsc0JBQXNCLHdJQ2hCbkMsaS9CQXVDQSwyQ0Q5QlksWUFBWSx1WUFBRSxtQkFBbUIsK0JBQUUscUJBQXFCOztTQU92RCxzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFWbEMsU0FBUzsrQkFDRSxpQkFBaUIsY0FDZixJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CLEVBQUUscUJBQXFCLENBQUMsUUFHN0Q7d0JBQ0osS0FBSyxFQUFFLFVBQVU7cUJBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDdXN0b21Db250cm9sQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jdXN0b20tY29udHJvbC9jdXN0b20tY29udHJvbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvcHNCaW5kaW5nRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3VpLWJhc2ljLXN3aXRjaCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUsIFByb3BzQmluZGluZ0RpcmVjdGl2ZV0sXG4gIHRlbXBsYXRlVXJsOiAnLi91aS1iYXNpYy1zd2l0Y2guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZXM6IFtdLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICd1aS1iYXNpYycsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIFVpQmFzaWNTd2l0Y2hDb21wb25lbnQgZXh0ZW5kcyBDdXN0b21Db250cm9sQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfb25DaGFuZ2U/OiBhbnk7XG5cbiAgb3ZlcnJpZGUgY29udHJvbCA9IG5ldyBGb3JtQ29udHJvbChmYWxzZSk7XG5cbiAgb3ZlcnJpZGUgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5fb25DaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHVwZGF0ZUNvbnRyb2woZTogRXZlbnQpOiB2b2lkIHtcbiAgICBjb25zdCBjaGVja2VkID0gKGUudGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQpLmNoZWNrZWQ7XG5cbiAgICB0aGlzLmNvbnRyb2wuc2V0VmFsdWUoY2hlY2tlZCk7XG4gICAgdGhpcy5fb25DaGFuZ2UoY2hlY2tlZCk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJkYXRhXCI+XG4gIDxkaXZcbiAgICBjbGFzcz1cIm9wdGlvbi1idXR0b24td3JhcHBlclwiXG4gICAgW25nQ2xhc3NdPVwie1xuICAgICAgZGlzYWJsZWQ6IGNvbnRyb2wuZGlzYWJsZWRcbiAgICB9XCJcbiAgPlxuICAgIDxsYWJlbCBjbGFzcz1cIm9wdGlvbi1idXR0b24gc3dpdGNoLWJ1dHRvblwiPlxuICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAqbmdJZj1cImRhdGEub3B0aW9ucz8ubGFiZWxQb3NpdGlvbiA9PT0gJ2JlZm9yZSdcIlxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJsYWJlbFRlbXBsYXRlXCJcbiAgICAgID48L25nLWNvbnRhaW5lcj5cblxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgIFtwcm9wc0JpbmRpbmddPVwiW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHByb3BzOiBkYXRhLnByb3BzLFxuICAgICAgICAgICAgb21pdDogWyd0eXBlJ11cbiAgICAgICAgICB9XG4gICAgICAgIF1cIlxuICAgICAgICBbY2hlY2tlZF09XCJjb250cm9sLnZhbHVlID09PSB0cnVlXCJcbiAgICAgICAgKGNoYW5nZSk9XCJ1cGRhdGVDb250cm9sKCRldmVudClcIlxuICAgICAgLz5cbiAgICAgIDxzcGFuIGNsYXNzPVwibWFya2VyXCI+PC9zcGFuPlxuXG4gICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICpuZ0lmPVwiZGF0YS5vcHRpb25zPy5sYWJlbFBvc2l0aW9uICE9PSAnYmVmb3JlJ1wiXG4gICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImxhYmVsVGVtcGxhdGVcIlxuICAgICAgPjwvbmctY29udGFpbmVyPlxuICAgIDwvbGFiZWw+XG4gIDwvZGl2PlxuXG4gIDxuZy10ZW1wbGF0ZSAjbGFiZWxUZW1wbGF0ZT5cbiAgICA8c3BhbiAqbmdJZj1cImRhdGEub3B0aW9ucz8uZGF0YT8uWzBdPy5sYWJlbFwiPnt7XG4gICAgICBkYXRhLm9wdGlvbnM/LmRhdGE/LlswXT8ubGFiZWxcbiAgICB9fTwvc3Bhbj5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvbmctY29udGFpbmVyPlxuIl19