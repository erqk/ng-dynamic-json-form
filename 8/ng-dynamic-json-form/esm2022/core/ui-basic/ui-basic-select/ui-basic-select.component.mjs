import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import { CustomControlComponent } from '../../components/custom-control/custom-control.component';
import { PropsBindingDirective } from '../../directives';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
class UiBasicSelectComponent extends CustomControlComponent {
    constructor() {
        super(...arguments);
        this.control = new FormControl(-1);
        this.onTouched = () => { };
        this.onChange = (_) => { };
    }
    writeValue(obj) {
        const index = this.data?.options?.data?.findIndex((x) => JSON.stringify(x.value) === JSON.stringify(obj));
        if (index !== undefined) {
            this.control.setValue(index);
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    updateControl(e) {
        const index = e.target.value;
        if (index) {
            const value = this.data?.options?.data?.map((x) => x.value)?.[parseInt(index)];
            this.onChange(value);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UiBasicSelectComponent, isStandalone: true, selector: "ui-basic-select", host: { classAttribute: "ui-basic" }, usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [ngClass]=\"{\n      disabled: control.disabled\n    }\"\n    [ngStyle]=\"{\n      'flex-direction': data.options?.layout\n    }\"\n  >\n    <select\n      [propsBinding]=\"[\n        {\n          props: data.props\n        }\n      ]\"\n      [formControl]=\"control\"\n      (blur)=\"onTouched()\"\n      (change)=\"updateControl($event)\"\n    >\n      <ng-container *ngFor=\"let item of data.options?.data; index as i\">\n        <option [value]=\"i\">{{ item.label }}</option>\n      </ng-container>\n    </select>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: PropsBindingDirective, selector: "[propsBinding]", inputs: ["propsBinding"] }] }); }
}
export { UiBasicSelectComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-basic-select', standalone: true, imports: [CommonModule, ReactiveFormsModule, PropsBindingDirective], host: {
                        class: 'ui-basic',
                    }, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [ngClass]=\"{\n      disabled: control.disabled\n    }\"\n    [ngStyle]=\"{\n      'flex-direction': data.options?.layout\n    }\"\n  >\n    <select\n      [propsBinding]=\"[\n        {\n          props: data.props\n        }\n      ]\"\n      [formControl]=\"control\"\n      (blur)=\"onTouched()\"\n      (change)=\"updateControl($event)\"\n    >\n      <ng-container *ngFor=\"let item of data.options?.data; index as i\">\n        <option [value]=\"i\">{{ item.label }}</option>\n      </ng-container>\n    </select>\n  </div>\n</ng-container>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktYmFzaWMtc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYi9jb3JlL3VpLWJhc2ljL3VpLWJhc2ljLXNlbGVjdC91aS1iYXNpYy1zZWxlY3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGliL2NvcmUvdWktYmFzaWMvdWktYmFzaWMtc2VsZWN0L3VpLWJhc2ljLXNlbGVjdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDbEcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7QUFFekQsTUFVYSxzQkFBdUIsU0FBUSxzQkFBc0I7SUFWbEU7O1FBV1csWUFBTyxHQUFHLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdkMsY0FBUyxHQUFHLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQztRQUNyQixhQUFRLEdBQUcsQ0FBQyxDQUFNLEVBQUUsRUFBRSxHQUFFLENBQUMsQ0FBQztLQThCM0I7SUE1QlUsVUFBVSxDQUFDLEdBQVE7UUFDMUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FDL0MsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQ3ZELENBQUM7UUFFRixJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDOUI7SUFDSCxDQUFDO0lBRVEsZ0JBQWdCLENBQUMsRUFBTztRQUMvQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRVEsaUJBQWlCLENBQUMsRUFBTztRQUNoQyxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsYUFBYSxDQUFDLENBQVE7UUFDcEIsTUFBTSxLQUFLLEdBQUksQ0FBQyxDQUFDLE1BQTRCLENBQUMsS0FBSyxDQUFDO1FBRXBELElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQzNELFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDaEIsQ0FBQztZQUNGLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEI7SUFDSCxDQUFDOytHQWpDVSxzQkFBc0I7bUdBQXRCLHNCQUFzQix3SUNoQm5DLDhtQkEwQkEsMkNEakJZLFlBQVksa2JBQUUsbUJBQW1CLHF0QkFBRSxxQkFBcUI7O1NBT3ZELHNCQUFzQjs0RkFBdEIsc0JBQXNCO2tCQVZsQyxTQUFTOytCQUNFLGlCQUFpQixjQUNmLElBQUksV0FDUCxDQUFDLFlBQVksRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsQ0FBQyxRQUc3RDt3QkFDSixLQUFLLEVBQUUsVUFBVTtxQkFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEN1c3RvbUNvbnRyb2xDb21wb25lbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2N1c3RvbS1jb250cm9sL2N1c3RvbS1jb250cm9sLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQcm9wc0JpbmRpbmdEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9kaXJlY3RpdmVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndWktYmFzaWMtc2VsZWN0JyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSwgUHJvcHNCaW5kaW5nRGlyZWN0aXZlXSxcbiAgdGVtcGxhdGVVcmw6ICcuL3VpLWJhc2ljLXNlbGVjdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW10sXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ3VpLWJhc2ljJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVWlCYXNpY1NlbGVjdENvbXBvbmVudCBleHRlbmRzIEN1c3RvbUNvbnRyb2xDb21wb25lbnQge1xuICBvdmVycmlkZSBjb250cm9sID0gbmV3IEZvcm1Db250cm9sKC0xKTtcblxuICBvblRvdWNoZWQgPSAoKSA9PiB7fTtcbiAgb25DaGFuZ2UgPSAoXzogYW55KSA9PiB7fTtcblxuICBvdmVycmlkZSB3cml0ZVZhbHVlKG9iajogYW55KTogdm9pZCB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmRhdGE/Lm9wdGlvbnM/LmRhdGE/LmZpbmRJbmRleChcbiAgICAgICh4KSA9PiBKU09OLnN0cmluZ2lmeSh4LnZhbHVlKSA9PT0gSlNPTi5zdHJpbmdpZnkob2JqKVxuICAgICk7XG5cbiAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5jb250cm9sLnNldFZhbHVlKGluZGV4KTtcbiAgICB9XG4gIH1cblxuICBvdmVycmlkZSByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICBvdmVycmlkZSByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHVwZGF0ZUNvbnRyb2woZTogRXZlbnQpOiB2b2lkIHtcbiAgICBjb25zdCBpbmRleCA9IChlLnRhcmdldCBhcyBIVE1MU2VsZWN0RWxlbWVudCkudmFsdWU7XG5cbiAgICBpZiAoaW5kZXgpIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5kYXRhPy5vcHRpb25zPy5kYXRhPy5tYXAoKHgpID0+IHgudmFsdWUpPy5bXG4gICAgICAgIHBhcnNlSW50KGluZGV4KVxuICAgICAgXTtcbiAgICAgIHRoaXMub25DaGFuZ2UodmFsdWUpO1xuICAgIH1cbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGFcIj5cbiAgPGRpdlxuICAgIGNsYXNzPVwiZ3JvdXAtYnV0dG9uc1wiXG4gICAgW25nQ2xhc3NdPVwie1xuICAgICAgZGlzYWJsZWQ6IGNvbnRyb2wuZGlzYWJsZWRcbiAgICB9XCJcbiAgICBbbmdTdHlsZV09XCJ7XG4gICAgICAnZmxleC1kaXJlY3Rpb24nOiBkYXRhLm9wdGlvbnM/LmxheW91dFxuICAgIH1cIlxuICA+XG4gICAgPHNlbGVjdFxuICAgICAgW3Byb3BzQmluZGluZ109XCJbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm9wczogZGF0YS5wcm9wc1xuICAgICAgICB9XG4gICAgICBdXCJcbiAgICAgIFtmb3JtQ29udHJvbF09XCJjb250cm9sXCJcbiAgICAgIChibHVyKT1cIm9uVG91Y2hlZCgpXCJcbiAgICAgIChjaGFuZ2UpPVwidXBkYXRlQ29udHJvbCgkZXZlbnQpXCJcbiAgICA+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIGRhdGEub3B0aW9ucz8uZGF0YTsgaW5kZXggYXMgaVwiPlxuICAgICAgICA8b3B0aW9uIFt2YWx1ZV09XCJpXCI+e3sgaXRlbS5sYWJlbCB9fTwvb3B0aW9uPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9zZWxlY3Q+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG4iXX0=