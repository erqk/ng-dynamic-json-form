import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormArray, FormControl, ReactiveFormsModule } from '@angular/forms';
import { CustomControlComponent } from '../../components/custom-control/custom-control.component';
import { PropsBindingDirective } from '../../directives';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class UiBasicCheckboxComponent extends CustomControlComponent {
    constructor() {
        super(...arguments);
        this.control = new FormArray([]);
    }
    writeValue(obj) {
        this.control.clear();
        if (Array.isArray(obj)) {
            obj.forEach((x) => this._addItem(x));
        }
        else {
            this._addItem(obj);
        }
    }
    registerOnChange(fn) {
        this._onChange = fn;
    }
    toggle(e) {
        const checked = e.target.checked;
        this._onChange(checked);
    }
    onCheckboxChange(e, index) {
        const input = e.target;
        const checked = input.checked;
        const value = this.data?.options?.data
            ?.map((x) => x.value)
            .filter((val, i) => (i === index ? checked : this.isChecked(val)));
        this.control.clear();
        value?.forEach((x) => this._addItem(x));
        this._onChange(this.control.value);
    }
    isChecked(val) {
        return this.control.value.some((x) => JSON.stringify(x) === JSON.stringify(val));
    }
    get groupButtonsStyles() {
        return `
      flex-direction: ${this.data?.options?.layout ?? 'row'};
      align-items: flex-start;
      ${this.data?.options?.containerStyles ?? ''}
    `.replace(/\s{2,}/g, '');
    }
    _addItem(val) {
        const control = new FormControl(val);
        this.control.push(control);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicCheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UiBasicCheckboxComponent, isStandalone: true, selector: "ui-basic-checkbox", host: { classAttribute: "ui-basic" }, usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [style]=\"groupButtonsStyles\"\n    [ngClass]=\"[\n      data.options?.containerClass ?? '',\n      control.disabled ? 'disabled' : ''\n    ]\"\n  >\n    <ng-container *ngFor=\"let item of data.options?.data; index as i\">\n      <label\n        class=\"option-button\"\n        [ngStyle]=\"{\n          'justify-content':\n            data.options?.labelPosition === 'before' ? 'space-between' : null\n        }\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: true\n            }\n          \"\n        ></ng-container>\n\n        <ng-container *ngIf=\"data.options && data.options.data\">\n          <!-- binary checkbox -->\n          <ng-container *ngIf=\"data.options.data.length === 1\">\n            <input\n              type=\"checkbox\"\n              [propsBinding]=\"[\n                {\n                  props: data.props,\n                  omit: ['type']\n                }\n              ]\"\n              [checked]=\"!control.value.length ? false : control.value[0]\"\n              [disabled]=\"control.disabled\"\n              (change)=\"toggle($event)\"\n            />\n          </ng-container>\n\n          <!-- multi-select checkbox -->\n          <ng-container *ngIf=\"data.options.data.length > 1\">\n            <input\n              type=\"checkbox\"\n              [propsBinding]=\"[\n                {\n                  props: data.props,\n                  omit: ['type']\n                }\n              ]\"\n              [checked]=\"isChecked(item.value)\"\n              [disabled]=\"control.disabled\"\n              (change)=\"onCheckboxChange($event, i)\"\n            />\n          </ng-container>\n        </ng-container>\n\n        <span class=\"marker\"></span>\n\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: false\n            }\n          \"\n        ></ng-container>\n      </label>\n    </ng-container>\n  </div>\n\n  <ng-template #labelTemplate let-label=\"label\" let-isBefore=\"isBefore\">\n    <ng-container\n      *ngIf=\"(data.options?.labelPosition === 'before') === isBefore\"\n    >\n      <span>{{ label }}</span>\n    </ng-container>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: PropsBindingDirective, selector: "[propsBinding]", inputs: ["propsBinding"] }] }); }
}
export { UiBasicCheckboxComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiBasicCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-basic-checkbox', standalone: true, imports: [CommonModule, ReactiveFormsModule, PropsBindingDirective], host: {
                        class: 'ui-basic',
                    }, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [style]=\"groupButtonsStyles\"\n    [ngClass]=\"[\n      data.options?.containerClass ?? '',\n      control.disabled ? 'disabled' : ''\n    ]\"\n  >\n    <ng-container *ngFor=\"let item of data.options?.data; index as i\">\n      <label\n        class=\"option-button\"\n        [ngStyle]=\"{\n          'justify-content':\n            data.options?.labelPosition === 'before' ? 'space-between' : null\n        }\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: true\n            }\n          \"\n        ></ng-container>\n\n        <ng-container *ngIf=\"data.options && data.options.data\">\n          <!-- binary checkbox -->\n          <ng-container *ngIf=\"data.options.data.length === 1\">\n            <input\n              type=\"checkbox\"\n              [propsBinding]=\"[\n                {\n                  props: data.props,\n                  omit: ['type']\n                }\n              ]\"\n              [checked]=\"!control.value.length ? false : control.value[0]\"\n              [disabled]=\"control.disabled\"\n              (change)=\"toggle($event)\"\n            />\n          </ng-container>\n\n          <!-- multi-select checkbox -->\n          <ng-container *ngIf=\"data.options.data.length > 1\">\n            <input\n              type=\"checkbox\"\n              [propsBinding]=\"[\n                {\n                  props: data.props,\n                  omit: ['type']\n                }\n              ]\"\n              [checked]=\"isChecked(item.value)\"\n              [disabled]=\"control.disabled\"\n              (change)=\"onCheckboxChange($event, i)\"\n            />\n          </ng-container>\n        </ng-container>\n\n        <span class=\"marker\"></span>\n\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: false\n            }\n          \"\n        ></ng-container>\n      </label>\n    </ng-container>\n  </div>\n\n  <ng-template #labelTemplate let-label=\"label\" let-isBefore=\"isBefore\">\n    <ng-container\n      *ngIf=\"(data.options?.labelPosition === 'before') === isBefore\"\n    >\n      <span>{{ label }}</span>\n    </ng-container>\n  </ng-template>\n</ng-container>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,