import { CommonModule } from '@angular/common';
import { Component, ViewEncapsulation } from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import { CustomControlComponent, PropsBindingDirective, providePropsBinding, } from 'ng-dynamic-json-form';
import { Checkbox, CheckboxModule } from 'primeng/checkbox';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "primeng/checkbox";
class UiPrimengCheckboxComponent extends CustomControlComponent {
    constructor() {
        super(...arguments);
        this.control = new FormControl('');
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    get groupButtonsStyles() {
        return `
      flex-direction: ${this.data?.options?.layout ?? 'row'};
      align-items: flex-start;
      ${this.data?.options?.containerStyles ?? ''}
    `.replace(/\s{2,}/g, '');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiPrimengCheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UiPrimengCheckboxComponent, isStandalone: true, selector: "ui-primeng-checkbox", providers: [
            providePropsBinding([
                {
                    key: 'p-checkbox',
                    token: Checkbox,
                },
            ]),
        ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [style]=\"groupButtonsStyles\"\n    [ngClass]=\"[data.options?.containerClass ?? '']\"\n  >\n    <ng-container *ngFor=\"let item of data.options?.data\">\n      <label\n        class=\"option-button\"\n        [ngStyle]=\"{\n          'justify-content':\n            data.options?.labelPosition === 'before' ? 'space-between' : null\n        }\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: true\n            }\n          \"\n        ></ng-container>\n\n        <ng-container *ngIf=\"data.options && data.options.data\">\n          <!-- binary checkbox -->\n          <ng-container *ngIf=\"data.options.data.length === 1\">\n            <p-checkbox\n              #pCheckbox\n              [binary]=\"true\"\n              [formControl]=\"control\"\n              [propsBinding]=\"[\n                {\n                  key: 'p-checkbox',\n                  props: data.props,\n                  omit: ['binary']\n                }\n              ]\"\n              (onChange)=\"onChange(control.value)\"\n            ></p-checkbox>\n          </ng-container>\n\n          <!-- multi-select checkbox -->\n          <ng-container *ngIf=\"data.options.data.length > 1\">\n            <p-checkbox\n              [name]=\"'group'\"\n              [value]=\"item.value\"\n              [formControl]=\"control\"\n              [propsBinding]=\"[\n                {\n                  key: 'p-checkbox',\n                  props: data.props,\n                  omit: ['binary']\n                }\n              ]\"\n              (onChange)=\"onChange(control.value)\"\n            ></p-checkbox>\n          </ng-container>\n        </ng-container>\n\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: false,\n            }\n          \"\n        ></ng-container>\n      </label>\n    </ng-container>\n  </div>\n\n  <ng-template #labelTemplate let-label=\"label\" let-isBefore=\"isBefore\">\n    <ng-container\n      *ngIf=\"(data.options?.labelPosition === 'before') === isBefore\"\n    >\n      <span>{{ label }}</span>\n    </ng-container>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: CheckboxModule }, { kind: "component", type: i3.Checkbox, selector: "p-checkbox", inputs: ["value", "name", "disabled", "binary", "label", "ariaLabelledBy", "ariaLabel", "tabindex", "inputId", "style", "styleClass", "labelStyleClass", "formControl", "checkboxIcon", "readonly", "required", "trueValue", "falseValue"], outputs: ["onChange"] }, { kind: "directive", type: PropsBindingDirective, selector: "[propsBinding]", inputs: ["propsBinding"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
export { UiPrimengCheckboxComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UiPrimengCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-primeng-checkbox', standalone: true, encapsulation: ViewEncapsulation.None, imports: [
                        CommonModule,
                        ReactiveFormsModule,
                        CheckboxModule,
                        PropsBindingDirective,
                    ], providers: [
                        providePropsBinding([
                            {
                                key: 'p-checkbox',
                                token: Checkbox,
                            },
                        ]),
                    ], template: "<ng-container *ngIf=\"data\">\n  <div\n    class=\"group-buttons\"\n    [style]=\"groupButtonsStyles\"\n    [ngClass]=\"[data.options?.containerClass ?? '']\"\n  >\n    <ng-container *ngFor=\"let item of data.options?.data\">\n      <label\n        class=\"option-button\"\n        [ngStyle]=\"{\n          'justify-content':\n            data.options?.labelPosition === 'before' ? 'space-between' : null\n        }\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: true\n            }\n          \"\n        ></ng-container>\n\n        <ng-container *ngIf=\"data.options && data.options.data\">\n          <!-- binary checkbox -->\n          <ng-container *ngIf=\"data.options.data.length === 1\">\n            <p-checkbox\n              #pCheckbox\n              [binary]=\"true\"\n              [formControl]=\"control\"\n              [propsBinding]=\"[\n                {\n                  key: 'p-checkbox',\n                  props: data.props,\n                  omit: ['binary']\n                }\n              ]\"\n              (onChange)=\"onChange(control.value)\"\n            ></p-checkbox>\n          </ng-container>\n\n          <!-- multi-select checkbox -->\n          <ng-container *ngIf=\"data.options.data.length > 1\">\n            <p-checkbox\n              [name]=\"'group'\"\n              [value]=\"item.value\"\n              [formControl]=\"control\"\n              [propsBinding]=\"[\n                {\n                  key: 'p-checkbox',\n                  props: data.props,\n                  omit: ['binary']\n                }\n              ]\"\n              (onChange)=\"onChange(control.value)\"\n            ></p-checkbox>\n          </ng-container>\n        </ng-container>\n\n        <ng-container\n          *ngTemplateOutlet=\"\n            labelTemplate;\n            context: {\n              label: item.label,\n              isBefore: false,\n            }\n          \"\n        ></ng-container>\n      </label>\n    </ng-container>\n  </div>\n\n  <ng-template #labelTemplate let-label=\"label\" let-isBefore=\"isBefore\">\n    <ng-container\n      *ngIf=\"(data.options?.labelPosition === 'before') === isBefore\"\n    >\n      <span>{{ label }}</span>\n    </ng-container>\n  </ng-template>\n</ng-container>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktcHJpbWVuZy1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWIvdWktcHJpbWVuZy91aS1wcmltZW5nLWNoZWNrYm94L3VpLXByaW1lbmctY2hlY2tib3guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGliL3VpLXByaW1lbmcvdWktcHJpbWVuZy1jaGVja2JveC91aS1wcmltZW5nLWNoZWNrYm94LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQ0wsc0JBQXNCLEVBQ3RCLHFCQUFxQixFQUNyQixtQkFBbUIsR0FDcEIsTUFBTSxzQkFBc0IsQ0FBQztBQUM5QixPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7OztBQUU1RCxNQXFCYSwwQkFBMkIsU0FBUSxzQkFBc0I7SUFyQnRFOztRQXNCVyxZQUFPLEdBQUcsSUFBSSxXQUFXLENBQWMsRUFBRSxDQUFDLENBQUM7S0FjckQ7SUFYVSxnQkFBZ0IsQ0FBQyxFQUFPO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPO3dCQUNhLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLE1BQU0sSUFBSSxLQUFLOztRQUVuRCxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxlQUFlLElBQUksRUFBRTtLQUM1QyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDM0IsQ0FBQzsrR0FkVSwwQkFBMEI7bUdBQTFCLDBCQUEwQixrRUFYMUI7WUFDVCxtQkFBbUIsQ0FBQztnQkFDbEI7b0JBQ0UsR0FBRyxFQUFFLFlBQVk7b0JBQ2pCLEtBQUssRUFBRSxRQUFRO2lCQUNoQjthQUNGLENBQUM7U0FDSCxpREMzQkgsMDFFQWlGQSwyQ0RsRUksWUFBWSx5bEJBQ1osbUJBQW1CLHlUQUNuQixjQUFjLG9XQUNkLHFCQUFxQjs7U0FhWiwwQkFBMEI7NEZBQTFCLDBCQUEwQjtrQkFyQnRDLFNBQVM7K0JBQ0UscUJBQXFCLGNBQ25CLElBQUksaUJBQ0QsaUJBQWlCLENBQUMsSUFBSSxXQUM1Qjt3QkFDUCxZQUFZO3dCQUNaLG1CQUFtQjt3QkFDbkIsY0FBYzt3QkFDZCxxQkFBcUI7cUJBQ3RCLGFBQ1U7d0JBQ1QsbUJBQW1CLENBQUM7NEJBQ2xCO2dDQUNFLEdBQUcsRUFBRSxZQUFZO2dDQUNqQixLQUFLLEVBQUUsUUFBUTs2QkFDaEI7eUJBQ0YsQ0FBQztxQkFDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7XG4gIEN1c3RvbUNvbnRyb2xDb21wb25lbnQsXG4gIFByb3BzQmluZGluZ0RpcmVjdGl2ZSxcbiAgcHJvdmlkZVByb3BzQmluZGluZyxcbn0gZnJvbSAnbmctZHluYW1pYy1qc29uLWZvcm0nO1xuaW1wb3J0IHsgQ2hlY2tib3gsIENoZWNrYm94TW9kdWxlIH0gZnJvbSAncHJpbWVuZy9jaGVja2JveCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3VpLXByaW1lbmctY2hlY2tib3gnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQ2hlY2tib3hNb2R1bGUsXG4gICAgUHJvcHNCaW5kaW5nRGlyZWN0aXZlLFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBwcm92aWRlUHJvcHNCaW5kaW5nKFtcbiAgICAgIHtcbiAgICAgICAga2V5OiAncC1jaGVja2JveCcsXG4gICAgICAgIHRva2VuOiBDaGVja2JveCxcbiAgICAgIH0sXG4gICAgXSksXG4gIF0sXG4gIHRlbXBsYXRlVXJsOiAnLi91aS1wcmltZW5nLWNoZWNrYm94LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVzOiBbXSxcbn0pXG5leHBvcnQgY2xhc3MgVWlQcmltZW5nQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBDdXN0b21Db250cm9sQ29tcG9uZW50IHtcbiAgb3ZlcnJpZGUgY29udHJvbCA9IG5ldyBGb3JtQ29udHJvbDxhbnkgfCBhbnlbXT4oJycpO1xuICBvbkNoYW5nZT86IGFueTtcblxuICBvdmVycmlkZSByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICBnZXQgZ3JvdXBCdXR0b25zU3R5bGVzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiAke3RoaXMuZGF0YT8ub3B0aW9ucz8ubGF5b3V0ID8/ICdyb3cnfTtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgJHt0aGlzLmRhdGE/Lm9wdGlvbnM/LmNvbnRhaW5lclN0eWxlcyA/PyAnJ31cbiAgICBgLnJlcGxhY2UoL1xcc3syLH0vZywgJycpO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiZGF0YVwiPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJncm91cC1idXR0b25zXCJcbiAgICBbc3R5bGVdPVwiZ3JvdXBCdXR0b25zU3R5bGVzXCJcbiAgICBbbmdDbGFzc109XCJbZGF0YS5vcHRpb25zPy5jb250YWluZXJDbGFzcyA/PyAnJ11cIlxuICA+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiBkYXRhLm9wdGlvbnM/LmRhdGFcIj5cbiAgICAgIDxsYWJlbFxuICAgICAgICBjbGFzcz1cIm9wdGlvbi1idXR0b25cIlxuICAgICAgICBbbmdTdHlsZV09XCJ7XG4gICAgICAgICAgJ2p1c3RpZnktY29udGVudCc6XG4gICAgICAgICAgICBkYXRhLm9wdGlvbnM/LmxhYmVsUG9zaXRpb24gPT09ICdiZWZvcmUnID8gJ3NwYWNlLWJldHdlZW4nIDogbnVsbFxuICAgICAgICB9XCJcbiAgICAgID5cbiAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICpuZ1RlbXBsYXRlT3V0bGV0PVwiXG4gICAgICAgICAgICBsYWJlbFRlbXBsYXRlO1xuICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCxcbiAgICAgICAgICAgICAgaXNCZWZvcmU6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBcIlxuICAgICAgICA+PC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGEub3B0aW9ucyAmJiBkYXRhLm9wdGlvbnMuZGF0YVwiPlxuICAgICAgICAgIDwhLS0gYmluYXJ5IGNoZWNrYm94IC0tPlxuICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJkYXRhLm9wdGlvbnMuZGF0YS5sZW5ndGggPT09IDFcIj5cbiAgICAgICAgICAgIDxwLWNoZWNrYm94XG4gICAgICAgICAgICAgICNwQ2hlY2tib3hcbiAgICAgICAgICAgICAgW2JpbmFyeV09XCJ0cnVlXCJcbiAgICAgICAgICAgICAgW2Zvcm1Db250cm9sXT1cImNvbnRyb2xcIlxuICAgICAgICAgICAgICBbcHJvcHNCaW5kaW5nXT1cIltcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBrZXk6ICdwLWNoZWNrYm94JyxcbiAgICAgICAgICAgICAgICAgIHByb3BzOiBkYXRhLnByb3BzLFxuICAgICAgICAgICAgICAgICAgb21pdDogWydiaW5hcnknXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXVwiXG4gICAgICAgICAgICAgIChvbkNoYW5nZSk9XCJvbkNoYW5nZShjb250cm9sLnZhbHVlKVwiXG4gICAgICAgICAgICA+PC9wLWNoZWNrYm94PlxuICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgICAgICAgPCEtLSBtdWx0aS1zZWxlY3QgY2hlY2tib3ggLS0+XG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGEub3B0aW9ucy5kYXRhLmxlbmd0aCA+IDFcIj5cbiAgICAgICAgICAgIDxwLWNoZWNrYm94XG4gICAgICAgICAgICAgIFtuYW1lXT1cIidncm91cCdcIlxuICAgICAgICAgICAgICBbdmFsdWVdPVwiaXRlbS52YWx1ZVwiXG4gICAgICAgICAgICAgIFtmb3JtQ29udHJvbF09XCJjb250cm9sXCJcbiAgICAgICAgICAgICAgW3Byb3BzQmluZGluZ109XCJbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAga2V5OiAncC1jaGVja2JveCcsXG4gICAgICAgICAgICAgICAgICBwcm9wczogZGF0YS5wcm9wcyxcbiAgICAgICAgICAgICAgICAgIG9taXQ6IFsnYmluYXJ5J11cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cIlxuICAgICAgICAgICAgICAob25DaGFuZ2UpPVwib25DaGFuZ2UoY29udHJvbC52YWx1ZSlcIlxuICAgICAgICAgICAgPjwvcC1jaGVja2JveD5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICpuZ1RlbXBsYXRlT3V0bGV0PVwiXG4gICAgICAgICAgICBsYWJlbFRlbXBsYXRlO1xuICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCxcbiAgICAgICAgICAgICAgaXNCZWZvcmU6IGZhbHNlLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIFwiXG4gICAgICAgID48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvbGFiZWw+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuXG4gIDxuZy10ZW1wbGF0ZSAjbGFiZWxUZW1wbGF0ZSBsZXQtbGFiZWw9XCJsYWJlbFwiIGxldC1pc0JlZm9yZT1cImlzQmVmb3JlXCI+XG4gICAgPG5nLWNvbnRhaW5lclxuICAgICAgKm5nSWY9XCIoZGF0YS5vcHRpb25zPy5sYWJlbFBvc2l0aW9uID09PSAnYmVmb3JlJykgPT09IGlzQmVmb3JlXCJcbiAgICA+XG4gICAgICA8c3Bhbj57eyBsYWJlbCB9fTwvc3Bhbj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9uZy10ZW1wbGF0ZT5cbjwvbmctY29udGFpbmVyPlxuIl19